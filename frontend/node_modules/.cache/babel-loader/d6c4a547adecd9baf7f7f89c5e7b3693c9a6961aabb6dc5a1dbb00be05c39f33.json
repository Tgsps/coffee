{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tamim\\\\project\\\\ex\\\\frontend\\\\src\\\\context\\\\AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useReducer, useEffect } from 'react';\nimport api from '../api/axios';\nimport { toast } from 'react-toastify';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nconst authReducer = (state, action) => {\n  switch (action.type) {\n    case 'LOGIN_START':\n      return {\n        ...state,\n        loading: true,\n        error: null\n      };\n    case 'LOGIN_SUCCESS':\n      return {\n        ...state,\n        loading: false,\n        isAuthenticated: true,\n        user: action.payload.user,\n        token: action.payload.token,\n        error: null\n      };\n    case 'LOGIN_FAILURE':\n      return {\n        ...state,\n        loading: false,\n        isAuthenticated: false,\n        user: null,\n        token: null,\n        error: action.payload\n      };\n    case 'LOGOUT':\n      return {\n        ...state,\n        isAuthenticated: false,\n        user: null,\n        token: null,\n        error: null\n      };\n    case 'CLEAR_ERROR':\n      return {\n        ...state,\n        error: null\n      };\n    default:\n      return state;\n  }\n};\nconst initialState = {\n  isAuthenticated: false,\n  user: null,\n  token: localStorage.getItem('token'),\n  loading: false,\n  error: null\n};\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [state, dispatch] = useReducer(authReducer, initialState);\n\n  // Set up api auth header for token\n  useEffect(() => {\n    if (state.token) {\n      api.defaults.headers.common['Authorization'] = `Bearer ${state.token}`;\n    } else {\n      delete api.defaults.headers.common['Authorization'];\n    }\n  }, [state.token]);\n\n  // Check if user is logged in on app start\n  useEffect(() => {\n    const checkAuth = async () => {\n      if (state.token) {\n        try {\n          const response = await api.get('/api/auth/me');\n          dispatch({\n            type: 'LOGIN_SUCCESS',\n            payload: {\n              user: response.data.user,\n              token: state.token\n            }\n          });\n        } catch (error) {\n          localStorage.removeItem('token');\n          dispatch({\n            type: 'LOGOUT'\n          });\n        }\n      }\n    };\n    checkAuth();\n  }, []);\n  const login = async (email, password) => {\n    dispatch({\n      type: 'LOGIN_START'\n    });\n    try {\n      const response = await api.post('/api/auth/login', {\n        email,\n        password\n      });\n      const {\n        token,\n        user\n      } = response.data;\n      localStorage.setItem('token', token);\n      dispatch({\n        type: 'LOGIN_SUCCESS',\n        payload: {\n          user,\n          token\n        }\n      });\n      toast.success('Login successful!');\n      return {\n        success: true\n      };\n    } catch (error) {\n      var _error$response, _error$response$data;\n      const message = ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || 'Login failed';\n      dispatch({\n        type: 'LOGIN_FAILURE',\n        payload: message\n      });\n      toast.error(message);\n      return {\n        success: false,\n        error: message\n      };\n    }\n  };\n  const register = async userData => {\n    dispatch({\n      type: 'LOGIN_START'\n    });\n    try {\n      const response = await api.post('/api/auth/register', userData);\n      const {\n        token,\n        user\n      } = response.data;\n      localStorage.setItem('token', token);\n      dispatch({\n        type: 'LOGIN_SUCCESS',\n        payload: {\n          user,\n          token\n        }\n      });\n      toast.success('Registration successful!');\n      return {\n        success: true\n      };\n    } catch (error) {\n      var _error$response2, _error$response2$data;\n      const message = ((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.message) || 'Registration failed';\n      dispatch({\n        type: 'LOGIN_FAILURE',\n        payload: message\n      });\n      toast.error(message);\n      return {\n        success: false,\n        error: message\n      };\n    }\n  };\n  const logout = () => {\n    localStorage.removeItem('token');\n    dispatch({\n      type: 'LOGOUT'\n    });\n    toast.success('Logged out successfully');\n  };\n  const clearError = () => {\n    dispatch({\n      type: 'CLEAR_ERROR'\n    });\n  };\n  const value = {\n    ...state,\n    login,\n    register,\n    logout,\n    clearError\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 156,\n    columnNumber: 5\n  }, this);\n};\n_s(AuthProvider, \"GUSXxL/WUElrtHc/X73NyHNRMdw=\");\n_c = AuthProvider;\nexport const useAuth = () => {\n  _s2();\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n_s2(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useReducer","useEffect","api","toast","jsxDEV","_jsxDEV","AuthContext","authReducer","state","action","type","loading","error","isAuthenticated","user","payload","token","initialState","localStorage","getItem","AuthProvider","children","_s","dispatch","defaults","headers","common","checkAuth","response","get","data","removeItem","login","email","password","post","setItem","success","_error$response","_error$response$data","message","register","userData","_error$response2","_error$response2$data","logout","clearError","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","useAuth","_s2","context","Error","$RefreshReg$"],"sources":["C:/Users/tamim/project/ex/frontend/src/context/AuthContext.js"],"sourcesContent":["import React, { createContext, useContext, useReducer, useEffect } from 'react';\r\nimport api from '../api/axios';\r\nimport { toast } from 'react-toastify';\r\n\r\nconst AuthContext = createContext();\r\n\r\nconst authReducer = (state, action) => {\r\n  switch (action.type) {\r\n    case 'LOGIN_START':\r\n      return { ...state, loading: true, error: null };\r\n    case 'LOGIN_SUCCESS':\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        isAuthenticated: true,\r\n        user: action.payload.user,\r\n        token: action.payload.token,\r\n        error: null\r\n      };\r\n    case 'LOGIN_FAILURE':\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        isAuthenticated: false,\r\n        user: null,\r\n        token: null,\r\n        error: action.payload\r\n      };\r\n    case 'LOGOUT':\r\n      return {\r\n        ...state,\r\n        isAuthenticated: false,\r\n        user: null,\r\n        token: null,\r\n        error: null\r\n      };\r\n    case 'CLEAR_ERROR':\r\n      return { ...state, error: null };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst initialState = {\r\n  isAuthenticated: false,\r\n  user: null,\r\n  token: localStorage.getItem('token'),\r\n  loading: false,\r\n  error: null\r\n};\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n  const [state, dispatch] = useReducer(authReducer, initialState);\r\n\r\n  // Set up api auth header for token\r\n  useEffect(() => {\r\n    if (state.token) {\r\n      api.defaults.headers.common['Authorization'] = `Bearer ${state.token}`;\r\n    } else {\r\n      delete api.defaults.headers.common['Authorization'];\r\n    }\r\n  }, [state.token]);\r\n\r\n  // Check if user is logged in on app start\r\n  useEffect(() => {\r\n    const checkAuth = async () => {\r\n      if (state.token) {\r\n        try {\r\n          const response = await api.get('/api/auth/me');\r\n          dispatch({\r\n            type: 'LOGIN_SUCCESS',\r\n            payload: {\r\n              user: response.data.user,\r\n              token: state.token\r\n            }\r\n          });\r\n        } catch (error) {\r\n          localStorage.removeItem('token');\r\n          dispatch({ type: 'LOGOUT' });\r\n        }\r\n      }\r\n    };\r\n\r\n    checkAuth();\r\n  }, []);\r\n\r\n  const login = async (email, password) => {\r\n    dispatch({ type: 'LOGIN_START' });\r\n    try {\r\n      const response = await api.post('/api/auth/login', { email, password });\r\n      const { token, user } = response.data;\r\n      \r\n      localStorage.setItem('token', token);\r\n      dispatch({\r\n        type: 'LOGIN_SUCCESS',\r\n        payload: { user, token }\r\n      });\r\n      \r\n      toast.success('Login successful!');\r\n      return { success: true };\r\n    } catch (error) {\r\n      const message = error.response?.data?.message || 'Login failed';\r\n      dispatch({\r\n        type: 'LOGIN_FAILURE',\r\n        payload: message\r\n      });\r\n      toast.error(message);\r\n      return { success: false, error: message };\r\n    }\r\n  };\r\n\r\n  const register = async (userData) => {\r\n    dispatch({ type: 'LOGIN_START' });\r\n    try {\r\n      const response = await api.post('/api/auth/register', userData);\r\n      const { token, user } = response.data;\r\n      \r\n      localStorage.setItem('token', token);\r\n      dispatch({\r\n        type: 'LOGIN_SUCCESS',\r\n        payload: { user, token }\r\n      });\r\n      \r\n      toast.success('Registration successful!');\r\n      return { success: true };\r\n    } catch (error) {\r\n      const message = error.response?.data?.message || 'Registration failed';\r\n      dispatch({\r\n        type: 'LOGIN_FAILURE',\r\n        payload: message\r\n      });\r\n      toast.error(message);\r\n      return { success: false, error: message };\r\n    }\r\n  };\r\n\r\n  const logout = () => {\r\n    localStorage.removeItem('token');\r\n    dispatch({ type: 'LOGOUT' });\r\n    toast.success('Logged out successfully');\r\n  };\r\n\r\n  const clearError = () => {\r\n    dispatch({ type: 'CLEAR_ERROR' });\r\n  };\r\n\r\n  const value = {\r\n    ...state,\r\n    login,\r\n    register,\r\n    logout,\r\n    clearError\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={value}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useAuth = () => {\r\n  const context = useContext(AuthContext);\r\n  if (!context) {\r\n    throw new Error('useAuth must be used within an AuthProvider');\r\n  }\r\n  return context;\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}